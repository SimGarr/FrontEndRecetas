import { Component } from '@angular/core';
import { IonApp, IonRouterOutlet } from '@ionic/angular/standalone';
import { Platform } from '@ionic/angular';
import { AuthService } from './Servicios/auth.service';
import { DatabaseService } from './Servicios/database.service';

@Component({
  selector: 'app-root',
  templateUrl: 'app.component.html',
  imports: [IonApp, IonRouterOutlet],
})
export class AppComponent {
  constructor(
    private platform: Platform,
    private authService: AuthService,
    private dbService: DatabaseService
  ) {
    this.initializeApp();
  }

  private async initializeApp() {
    await this.platform.ready();
    console.log('‚úÖ Plataforma lista');

    try {
      // ==========================
      // üß± INICIALIZAR BASE SQLITE
      // ==========================
      console.log('üöÄ Inicializando base de datos SQLite...');
      await this.dbService.initDB();

      // (Opcional) Comprobar si ya hay sesiones guardadas
      const sesiones = await this.dbService.obtenerSesiones();
      console.log('üìã Sesiones actuales en SQLite:', sesiones);

      // ==========================
      // üîê INICIALIZAR AUTHSERVICE
      // ==========================
      console.log('üöÄ Inicializando AuthService...');
      await this.authService.init();
      console.log('‚úÖ AuthService listo');

      // Verificar si hay sesi√≥n activa
      const isLoggedIn = await this.authService.isLoggedIn();
      if (isLoggedIn) {
        console.log('üîê Sesi√≥n activa detectada, redirigiendo...');
        await this.authService.redirectAfterLogin();
      } else {
        console.log('üëã No hay sesi√≥n activa');
      }
    } catch (error) {
      console.error('‚ùå Error durante la inicializaci√≥n:', error);
    }
  }
}
